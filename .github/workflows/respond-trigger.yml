on:
  workflow_dispatch:
    inputs:
      source_repo:
        description: 'Source repo'
        required: true
        type: string
      source_owner:
        description: 'Source repo owner'
        required: true
        type: string
      message:
        description: 'Commit message'
        required: true
        type: string

permissions:
  contents: read

concurrency:
  group: miterra-site-build
  cancel-in-progress: false

jobs: 
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Generate release message
      id: generate_message
      run: |
        echo "datetime=$(date +'%Y-%m-%dT%H:%M:%S%z')" >> $GITHUB_ENV

        if [[ '${{ github.event_name }}' == 'workflow_dispatch' ]]; then
          echo "Triggered from ${{github.event.inputs.source_repo}} by ${{github.event.inputs.source_owner}}." >> $trigger_msg
          echo "${{github.event.input.message}}" >> $commit_msg
        else
          echo "Triggered by ${{github.event_name}} event." >> $trigger_msg
          echo "${{github.event.head_commit.message}}" >> $commit_msg
        fi
    
    - name: Get next version
      uses: reecetech/version-increment@2024.10.1
      id: version
      with:
        scheme: calver
    
    - name: Generate GitHub App installation access token (IAT)
      id: generate_iat
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ secrets.DOCS_APP_ID }}
        private-key: ${{ secrets.DOCS_APP_PRIVATE_KEY }}
        owner: ${{ github.repository_owner }}
    
    - name: Set the token as environment variable
      run: echo "GIT_CREDENTIALS=https://x-access-token:${{ steps.generate_iat.outputs.token }}@github.com" >> "$GITHUB_ENV"
    
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: 'SSM-WEnR/workflow-private'
        ref: 'main'
        token: ${{steps.generate_iat.outputs.token}}
    
    - name: Output
      run: |
        eccho "${{ steps.generate_message.outputs.trigger_msg }}"
        echo "Release #${{ steps.version.outputs.version }} generated by GitHub Actions on ${{ env.datetime }}."
        echo "Commit message: ${{ steps.generate_message.outputs.commit_msg }}"
